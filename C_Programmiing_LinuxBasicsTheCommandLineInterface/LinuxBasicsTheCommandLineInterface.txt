whoami
whoami --help
id
logname
logname --help
echo hello
echo $0   // shows the name of the interpretor application bash or shell
hostname
hostname --help
uname --help
uname
uname -a
history  //AND UP ARROW 
clear
uptime
cal
cal --help
cal -j
date
date --help
date +"%T"
date +"%A %d %B %Y"
man
man man
man date
man cal
q // to quit or exit out of man
==========================================================================
man top
top --help //how to quit + 
top  //q to quit
top  // ^+C to quit
sudo snap install htop
htop
htop --help
htop // F1
nano // ^ = ctrl  carret (circumflex accent)
work with nano
vim // :q and also escape then :q
ed
//CTRL + C expanation (sometimes quits the program, but not always)
man du
du --help
=============================================================================
hello
worm
firework
rain
hanoi
knight
====================================================================

pwd
whoami
ls
cd /
pwd
ls
cd
pwd
cd /home
ls
cd /
pwd
cd /bin
ls
cd /
ls
cd /sys
ls
cd // always go to home directory

=======================================================================
//RELATIVE PATHS

pwd
ls -a 
cd ..
pwd
cd user
pwd
cd ../..
pwd
ls
cd sys
ls
cd module
cd drm
ls
cd parameters
ls
cd ../../..
ls -a
cd /sys/module
cd sys
cd /sys
cd ./sys
cd ./module
cd 
ls
cd program.c

absouloute path always start with /
==============================================================================
ls
file program.c
nano f
hello!   (CTRL + O then ENTER then CTRL + X)
file f
realpath f   /// get the real absouloute path
cd /
ls
file bin
cd bin
ls
file cat
file busybox
realpath cat
cd /sys/kernel
ls
file notes  // get type of file
file fscaps
which realpath // locate binary
which cat
which which
which file

=======================================================================
pwd
nano fileooo
touch file
ls
rm file
ls
touch my file // will create two files
touch "your file" or touch your\ file
ls
rm my
rm file
touch my\ file
ls
ls -l
rm my\ file
touch 'my file'
rm 'my file'
rm '
'  // OR CTRL + D (sometimes twice); or CTRL + Z (suspend); CTRL + C does not work
(
)  // OR CTRL + D (sometimes twice); or CTRL + Z (suspend) CTRL + C does not work
"
"
{
}
touch my_file (with underscore)
rm my_file

=================================================================


nano file.txt
here is a text file
with a second line
cat file.txt
echo "hello world"
echo "hello world" > file2.txt
cat file2.txt
cat file2.txt > file3.txt
cat file3.txt
cat > anotherfile.txt
this is anotherfile
with a new second also (CTRL + D twice!)
cat anotherfile.txt
cat /etc/services
cat /etc/services > listOfServices.txt
nano listOfServices.txt
cat /etc/services | more
cat /etc/services | less    (navigating: space bar, arrows or j,k, G, g)
more anotherfile.txt
less anotherfile.txt
ls /usr/bin
ls /usr/bin | less
searching: Forward Search
/ – search for a pattern which will take you to the next occurrence.
n – for next match in forward
N – for previous match in backward
Backward Search
? – search for a pattern which will take you to the previous occurrence.
n – for next match in backward direction
N – for previous match in forward direction
less --help  (see N and M options)
ls /usr/bin | less -NM


========================================================================




Filesystem,  - http://manpages.ubuntu.com/manpages/impish/en/man7/hier.7.html


https://www.howtogeek.com/117435/htg-explains-the-linux-directory-structure-explained/

https://docs.snowme34.com/en/latest/reference/linux/linux-root-directory-structure.html



history, FSSTND, 
/bin, 
/sbin, 
/home, 
/root, 
/etc, 
/lib, 
/tmp, 
/var, 
/usr, 
/dev
Directory	Description
/
Primary hierarchy root and root directory of the entire file system hierarchy.
/bin
Essential command binaries that need to be available in single-user mode, including to bring up the system or repair it,[4] for all users (e.g., cat, ls, cp).
/boot
Boot loader files (e.g., kernels, initrd).
/dev
Device files (e.g., /dev/null, /dev/disk0, /dev/sda1, /dev/tty, /dev/random).
/etc
Host-specific system-wide configuration files.
There has been controversy over the meaning of the name itself. In early versions of the UNIX Implementation Document from Bell labs, /etc is referred to as the etcetera directory,[5] as this directory historically held everything that did not belong elsewhere (however, the FHS restricts /etc to static configuration files and may not contain binaries).[6] Since the publication of early documentation, the directory name has been re-explained in various ways. Recent interpretations include backronyms such as "Editable Text Configuration" or "Extended Tool Chest".[7]

/etc/opt
Configuration files for add-on packages stored in /opt.
/etc/sgml
Configuration files, such as catalogs, for software that processes SGML.
/etc/X11
Configuration files for the X Window System, version 11.
/etc/xml
Configuration files, such as catalogs, for software that processes XML.
/home
Users' home directories, containing saved files, personal settings, etc.
/lib
Libraries essential for the binaries in /bin and /sbin.
/lib<qual>
Alternate format essential libraries. These are typically used on systems that support more than one executable code format, such as systems supporting 32-bit and 64-bit versions of an instruction set. Such directories are optional, but if they exist, they have some requirements.
/media
Mount points for removable media such as CD-ROMs (appeared in FHS-2.3 in 2004).
/mnt
Temporarily mounted filesystems.
/opt
Add-on application software packages.[8]
/proc
Virtual filesystem providing process and kernel information as files. In Linux, corresponds to a procfs mount. Generally, automatically generated and populated by the system, on the fly.
/root
Home directory for the root user.
/run
Run-time variable data: Information about the running system since last boot, e.g., currently logged-in users and running daemons. Files under this directory must be either removed or truncated at the beginning of the boot process, but this is not necessary on systems that provide this directory as a temporary filesystem (tmpfs).
/sbin
Essential system binaries (e.g., fsck, init, route).
/srv
Site-specific data served by this system, such as data and scripts for web servers, data offered by FTP servers, and repositories for version control systems (appeared in FHS-2.3 in 2004).
/sys
Contains information about devices, drivers, and some kernel features.[9]
/tmp
Directory for temporary files (see also /var/tmp). Often not preserved between system reboots and may be severely size-restricted.
/usr
Secondary hierarchy for read-only user data; contains the majority of (multi-)user utilities and applications. Should be shareable and read-only.[10][11]
/usr/bin
Non-essential command binaries (not needed in single-user mode); for all users.
/usr/include
Standard include files.
/usr/lib
Libraries for the binaries in /usr/bin and /usr/sbin.
/usr/lib<qual>
Alternative-format libraries (e.g., /usr/lib32 for 32-bit libraries on a 64-bit machine (optional)).
/usr/local
Tertiary hierarchy for local data, specific to this host. Typically has further subdirectories (e.g., bin, lib, share).[NB 1]
/usr/sbin
Non-essential system binaries (e.g., daemons for various network services).
/usr/share
Architecture-independent (shared) data.
/usr/src
Source code (e.g., the kernel source code with its header files).
/usr/X11R6
X Window System, Version 11, Release 6 (up to FHS-2.3, optional).
/var
Variable files: files whose content is expected to continually change during normal operation of the system, such as logs, spool files, and temporary e-mail files.
/var/cache
Application cache data. Such data are locally generated as a result of time-consuming I/O or calculation. The application must be able to regenerate or restore the data. The cached files can be deleted without loss of data.
/var/lib
State information. Persistent data modified by programs as they run (e.g., databases, packaging system metadata, etc.).
/var/lock
Lock files. Files keeping track of resources currently in use.
/var/log
Log files. Various logs.
/var/mail
Mailbox files. In some distributions, these files may be located in the deprecated /var/spool/mail.
/var/opt
Variable data from add-on packages that are stored in /opt.
/var/run
Run-time variable data. This directory contains system information data describing the system since it was booted.[12]
In FHS 3.0, /var/run is replaced by /run; a system should either continue to provide a /var/run directory or provide a symbolic link from /var/run to /run for backwards compatibility.[13]

/var/spool
Spool for tasks waiting to be processed (e.g., print queues and outgoing mail queue).
/var/spool/mail
Deprecated location for users' mailboxes.[14]
/var/tmp
Temporary files to be preserved between reboots.
https://en.wikipedia.org/wiki/Filesystem_Hierarchy_Standard

Examples
An absolute path name, pointing to what is normally an executable file on an Ubuntu system:

/usr/bin/test
An absolute path name, but pointing to a directory instead of a regular file:

/usr/bin/
A relative path name, which will point to /usr/bin/test only if the current directory is /usr/:

bin/test
A relative path name, which will point to /usr/bin/test if the current directory is any directory in /usr/, for instance /usr/share/:

../bin/test
A path name using the special shortcut ~, which refers to the current user's home directory:

~/Desktop/
Path names can contain almost any character, but some characters, such as space, must be escaped in most software, usually by enclosing the name in quotation marks:

"~/Examples/Experience ubuntu.ogg"
or by employing the escape character \:

~/Examples/Experience\ ubuntu.ogg
Main directories
The standard Ubuntu directory structure mostly follows the Filesystem Hierarchy Standard, which can be referred to for more detailed information.

Here, only the most important directories in the system will be presented.

/bin is a place for most commonly used terminal commands, like ls, mount, rm, etc.

/boot contains files needed to start up the system, including the Linux kernel, a RAM disk image and bootloader configuration files.

/dev contains all device files, which are not regular files but instead refer to various hardware devices on the system, including hard drives.

/etc contains system-global configuration files, which affect the system's behavior for all users.

/home home sweet home, this is the place for users' home directories.

/lib contains very important dynamic libraries and kernel modules

/media is intended as a mount point for external devices, such as hard drives or removable media (floppies, CDs, DVDs).

/mnt is also a place for mount points, but dedicated specifically to "temporarily mounted" devices, such as network filesystems.

/opt can be used to store additional software for your system, which is not handled by the package manager.

/proc is a virtual filesystem that provides a mechanism for kernel to send information to processes.

/root is the superuser's home directory, not in /home/ to allow for booting the system even if /home/ is not available.

/run is a tmpfs (temporary file system) available early in the boot process where ephemeral run-time data is stored. Files under this directory are removed or truncated at the beginning of the boot process.
(It deprecates various legacy locations such as /var/run, /var/lock, /lib/init/rw in otherwise non-ephemeral directory trees as well as /dev/.* and /dev/shm  which are not device files.)

/sbin contains important administrative commands that should generally only be employed by the superuser.

/srv can contain data directories of services such as HTTP (/srv/www/) or FTP.

/sys is a virtual filesystem that can be accessed to set or obtain information about the kernel's view of the system.

/tmp is a place for temporary files used by applications.

/usr contains the majority of user utilities and applications, and partly replicates the root directory structure, containing for instance, among others, /usr/bin/ and /usr/lib.

/var is dedicated to variable data, such as logs, databases, websites, and temporary spool (e-mail etc.) files that persist from one boot to the next. A notable directory it contains is /var/log where system log files are kept.
https://help.ubuntu.com/community/LinuxFilesystemTreeOverview

https://i.stack.imgur.com/hN4lt.jpg



